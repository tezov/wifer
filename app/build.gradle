plugins {
    id 'com.android.application'
    id 'com.tezov.application'
}

android {
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    defaultConfig {
        multiDexEnabled true
        compileSdk 33
        minSdk 24
        targetSdk 33
        resConfigs "en", "fr"
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    signingConfigs {
        releaseConfig {
            def keystoreReleaseProperties = new Properties()
            keystoreReleaseProperties.load(new FileInputStream(file("keyStoreRelease.properties")))
            storeFile file(keystoreReleaseProperties.storeFile)
            storePassword keystoreReleaseProperties.storePassword
            keyAlias keystoreReleaseProperties.keyAlias
            keyPassword keystoreReleaseProperties.keyPassword
        }
        debugConfig {
            def keystoreDebugProperties = new Properties()
            keystoreDebugProperties.load(new FileInputStream(file("keyStoreDebug.properties")))
            storeFile file(keystoreDebugProperties.storeFile)
            storePassword keystoreDebugProperties.storePassword
            keyAlias keystoreDebugProperties.keyAlias
            keyPassword keystoreDebugProperties.keyPassword
        }
    }
    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            signingConfig signingConfigs.releaseConfig
            debuggable false
        }
        debug {
            shrinkResources false
            minifyEnabled false
            signingConfig signingConfigs.debugConfig
        }
    }
    sourceSets {
        main {
            def main_layouts = file('src/main/res/layouts').listFiles()
            res {
                srcDirs 'src/main/res', main_layouts
            }
            java {
                srcDirs 'src/main/java'
                filter.exclude '**/*TODO*'
            }
        }
        debug {
            res {
                srcDirs 'src/build_type/debug/res'
            }
            java {
                srcDirs 'src/build_type/debug/java'
            }
        }
        release {
            res {
                srcDirs 'src/build_type/release/res'
            }
            java {
                srcDirs 'src/build_type/release/java'
            }
        }
    }
}
configurations {
    all*.exclude group: 'com.google.firebase', module: 'firebase-common'
    all*.exclude group: 'com.google.firebase', module: 'firebase-core'
    all*.exclude group: 'com.google.firebase', module: 'firebase-auth'
    all*.exclude group: 'com.google.firebase', module: 'firebase-database'
    all*.exclude group: 'com.google.firebase', module: 'firebase-storage'
    all*.exclude group: 'com.google.firebase', module: 'firebase-analytics'
//    all*.exclude group: 'com.google.android.gms', module: 'play-services-ads'
}
dependencies {
    api project(':lib_java_android')
    implementation "com.android.billingclient:billing:6.1.0"

    implementation "com.google.android.gms:play-services-ads-identifier:18.0.1"
}
tezov {
    debug {
        enable = false //NOW Always check before release!!!!
        keepSourceFile = true
        keepLog = true
        repackage = false
        obfuscate = false
    }
    release{
        obfuscate = true //NOW Always check before release!!!!
    }
    configuration {
        applicationId = 'com.tezov.wifer'
    }
    version {
        major = 2
        minor = 0
        patch = 1
    }
}
tezov.beforeVariant { buildType ->
    def billing_sku_no_ads = null
    def build = null
    if(buildType == DEBUG){
        build = android.buildTypes.debug
        //<SAMPLE SKU>
        def SKU_TEST_FAKE = "android.test.fake"
        def SKU_TEST_PURCHASE = "android.test.purchase"
        def SKU_TEST_PURCHASED = "android.test.purchased"
        def SKU_TEST_CANCELED = "android.test.canceled"
        def SKU_TEST_REFUNDED = "android.test.refunded"
        def SKU_TEST_UNAVAILABLE = "android.test.item_unavailable"
        //</SAMPLE SKU>
        billing_sku_no_ads = SKU_TEST_PURCHASE

    }
    else if(buildType == RELEASE){
        build = android.buildTypes.release
        billing_sku_no_ads = "no_ads"
    }

    build.resValue "string", "application_version", tezov.version.name.get()
    build.manifestPlaceholders += [application_id: tezov.configuration.applicationId.get()]
    build.manifestPlaceholders += [package_name: buildType.getPackageName(project)]

    build.resValue "string", "billing_sku_no_ads", billing_sku_no_ads

}

